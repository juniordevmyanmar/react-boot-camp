{"version":3,"sources":["api.js","components/card/index.jsx","components/loading/index.jsx","home/index.jsx","components/minicard/index.jsx","components/status/index.jsx","context.jsx","detail/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["API","url","abortSignal","a","fetch","signal","response","json","useReducerAPI","React","useReducer","state","action","type","loading","data","error","Error","dispatch","useEffect","controller","AbortController","mounted","fetchData","abort","Card","name","population","data-testid","className","icon","faMapMarkerAlt","size","Loading","style","opacity","version","id","x","y","width","height","viewBox","enableBackground","marginLeft","marginTop","fill","d","Home","countryState","map","item","to","process","lat","lng","city","MiniCard","datetime","iconcode","temperature","moment","unix","format","alt","src","Status","unit","color","OWMapKeyAPIContext","createContext","Detail","useParams","apikey","useContext","currentWeatherState","current","daily","temp","wind_speed","humidity","weather","description","faWind","faTint","index","dt","max","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WEATHER_KEY","atob","ReactDOM","render","StrictMode","Provider","value","document","getElementById"],"mappings":"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","file":"static/js/main.1e1863fd.chunk.js","sourcesContent":["import React from \"react\";\n\nconst API = async (url, abortSignal) => {\n  const response = await fetch(url, { signal: abortSignal });\n  return response.json();\n};\n\n/**\n * This custom hooks uses useState to fetch data from server and return the result\n * @param {string} url\n */\nexport const useStateAPI = (url) => {\n  const [value, setState] = React.useState(null);\n  React.useEffect(() => {\n    // This is the abort controller that will cancel the fetch if the component was unmounted\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    let mounted = true;\n\n    const fetchData = async () => {\n      try {\n        const data = await API(url, signal);\n        setState(data);\n      } catch (e) {\n        setState(null);\n      }\n    };\n    // it will fetch data only on mount so that\n    if (mounted) {\n      fetchData();\n    }\n\n    return () => {\n      mounted = false;\n      controller.abort();\n    };\n  }, [url]);\n\n  return value;\n};\n\n/**\n * This method will use useReducer to get predicted state throughout the api request.\n * @param {string} url\n */\nexport const useReducerAPI = (url) => {\n  const initialState = { loading: false, data: null, error: null };\n  // This is reducer\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"loading\":\n        return { loading: true, data: null, error: null };\n      case \"success\":\n        return { loading: false, data: action.data, error: null };\n      case \"error\":\n        return { loading: false, data: null, error: action.error };\n      default:\n        throw new Error();\n    }\n  };\n  // we will use Reducer if we have to handle complex state in our component\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  React.useEffect(() => {\n    // This is the abort controller that will cancel the fetch if the component was unmounted\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    let mounted = true;\n\n    const fetchData = async () => {\n      // This dispatch will trigger before api was called\n      dispatch({ type: \"loading\" });\n      try {\n        const data = await API(url, signal);\n        // This dispatch will trigger after api called was success\n        dispatch({ type: \"success\", data: data });\n      } catch (e) {\n        // This dispatch will trigger after api called was failed\n        dispatch({ type: \"error\", error: e });\n      }\n    };\n    // it will fetch data only on mount so that\n    if (mounted) {\n      fetchData();\n    }\n\n    return () => {\n      mounted = false;\n      controller.abort();\n    };\n  }, [url]);\n\n  return state;\n};\n","import PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./index.css\";\nconst Card = ({ name, population }) => (\n  <>\n    <div data-testid=\"card\" className=\"card\">\n      <div className=\"card-row\">\n        <FontAwesomeIcon icon={faMapMarkerAlt} size=\"3x\" />\n        <div className=\"card-col\">\n          <p data-testid=\"cityname\" className=\"city\">\n            {name} Weather\n          </p>\n          <p data-testid=\"population\" className=\"population\">\n            {population} people\n          </p>\n        </div>\n      </div>\n    </div>\n  </>\n);\n\nexport default Card;\n\nCard.propTypes = {\n  name: PropTypes.string,\n  population: PropTypes.string,\n};\n","import \"./index.css\";\nconst Loading = () => (\n  <>\n    <div data-testid=\"loading-id\" className=\"preloader\" style={{ opacity: 1 }}>\n      <svg\n        version=\"1.1\"\n        id=\"sun\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"10px\"\n        height=\"10px\"\n        viewBox=\"0 0 10 10\"\n        enableBackground=\"new 0 0 10 10\"\n        style={{ opacity: 1, marginLeft: `0px`, marginTop: `0px` }}\n      >\n        <g>\n          <path\n            fill=\"none\"\n            d=\"M6.942,3.876c-0.4-0.692-1.146-1.123-1.946-1.123c-0.392,0-0.779,0.104-1.121,0.301c-1.072,0.619-1.44,1.994-0.821,3.067C3.454,6.815,4.2,7.245,5,7.245c0.392,0,0.779-0.104,1.121-0.301C6.64,6.644,7.013,6.159,7.167,5.581C7.321,5,7.243,4.396,6.942,3.876z M6.88,5.505C6.745,6.007,6.423,6.427,5.973,6.688C5.676,6.858,5.34,6.948,5,6.948c-0.695,0-1.343-0.373-1.69-0.975C2.774,5.043,3.093,3.849,4.024,3.312C4.32,3.14,4.656,3.05,4.996,3.05c0.695,0,1.342,0.374,1.69,0.975C6.946,4.476,7.015,5,6.88,5.505z\"\n          ></path>\n          <path\n            fill=\"none\"\n            d=\"M8.759,2.828C8.718,2.757,8.626,2.732,8.556,2.774L7.345,3.473c-0.07,0.041-0.094,0.132-0.053,0.202C7.319,3.723,7.368,3.75,7.419,3.75c0.025,0,0.053-0.007,0.074-0.02l1.211-0.699C8.774,2.989,8.8,2.899,8.759,2.828z\"\n          ></path>\n          <path\n            fill=\"none\"\n            d=\"M1.238,7.171c0.027,0.047,0.077,0.074,0.128,0.074c0.025,0,0.051-0.008,0.074-0.02l1.211-0.699c0.071-0.041,0.095-0.133,0.054-0.203S2.574,6.228,2.503,6.269l-1.21,0.699C1.221,7.009,1.197,7.101,1.238,7.171z\"\n          ></path>\n          <path\n            fill=\"none\"\n            d=\"M6.396,2.726c0.052,0,0.102-0.026,0.13-0.075l0.349-0.605C6.915,1.976,6.89,1.885,6.819,1.844c-0.07-0.042-0.162-0.017-0.202,0.054L6.269,2.503C6.228,2.574,6.251,2.666,6.322,2.706C6.346,2.719,6.371,2.726,6.396,2.726z\"\n          ></path>\n          <path\n            fill=\"none\"\n            d=\"M3.472,7.347L3.123,7.952c-0.041,0.07-0.017,0.162,0.054,0.203C3.2,8.169,3.226,8.175,3.25,8.175c0.052,0,0.102-0.027,0.129-0.074l0.349-0.605c0.041-0.07,0.017-0.16-0.054-0.203C3.603,7.251,3.513,7.276,3.472,7.347z\"\n          ></path>\n          <path\n            fill=\"none\"\n            d=\"M3.601,2.726c0.025,0,0.051-0.007,0.074-0.02C3.746,2.666,3.77,2.574,3.729,2.503l-0.35-0.604C3.338,1.828,3.248,1.804,3.177,1.844C3.106,1.886,3.082,1.976,3.123,2.047l0.35,0.604C3.5,2.7,3.549,2.726,3.601,2.726z\"\n          ></path>\n          <path\n            fill=\"none\"\n            d=\"M6.321,7.292c-0.07,0.043-0.094,0.133-0.054,0.203l0.351,0.605c0.026,0.047,0.076,0.074,0.127,0.074c0.025,0,0.051-0.006,0.074-0.02c0.072-0.041,0.096-0.133,0.055-0.203l-0.35-0.605C6.483,7.276,6.393,7.253,6.321,7.292z\"\n          ></path>\n          <path\n            fill=\"none\"\n            d=\"M2.202,5.146c0.082,0,0.149-0.065,0.149-0.147S2.284,4.851,2.202,4.851H1.503c-0.082,0-0.148,0.066-0.148,0.148s0.066,0.147,0.148,0.147H2.202z\"\n          ></path>\n          <path\n            fill=\"none\"\n            d=\"M8.493,4.851H7.794c-0.082,0-0.148,0.066-0.148,0.148s0.066,0.147,0.148,0.147l0,0h0.699c0.082,0,0.148-0.065,0.148-0.147S8.575,4.851,8.493,4.851L8.493,4.851z\"\n          ></path>\n          <path\n            fill=\"none\"\n            d=\"M5.146,2.203V0.805c0-0.082-0.066-0.148-0.148-0.148c-0.082,0-0.148,0.066-0.148,0.148v1.398c0,0.082,0.066,0.149,0.148,0.149C5.08,2.352,5.146,2.285,5.146,2.203z\"\n          ></path>\n          <path\n            fill=\"none\"\n            d=\"M4.85,7.796v1.396c0,0.082,0.066,0.15,0.148,0.15c0.082,0,0.148-0.068,0.148-0.15V7.796c0-0.082-0.066-0.148-0.148-0.148C4.917,7.647,4.85,7.714,4.85,7.796z\"\n          ></path>\n          <path\n            fill=\"none\"\n            d=\"M2.651,3.473L1.44,2.774C1.369,2.732,1.279,2.757,1.238,2.828C1.197,2.899,1.221,2.989,1.292,3.031l1.21,0.699c0.023,0.013,0.049,0.02,0.074,0.02c0.051,0,0.101-0.026,0.129-0.075C2.747,3.604,2.722,3.514,2.651,3.473z\"\n          ></path>\n          <path\n            fill=\"none\"\n            d=\"M8.704,6.968L7.493,6.269c-0.07-0.041-0.162-0.016-0.201,0.055c-0.041,0.07-0.018,0.162,0.053,0.203l1.211,0.699c0.023,0.012,0.049,0.02,0.074,0.02c0.051,0,0.102-0.027,0.129-0.074C8.8,7.101,8.776,7.009,8.704,6.968z\"\n          ></path>\n        </g>\n      </svg>\n      <svg\n        version=\"1.1\"\n        id=\"cloud\"\n        x=\"0px\"\n        y=\"0px\"\n        width=\"10px\"\n        height=\"10px\"\n        viewBox=\"0 0 10 10\"\n        enableBackground=\"new 0 0 10 10\"\n      >\n        <path\n          fill=\"none\"\n          d=\"M8.528,5.624H8.247c-0.085,0-0.156-0.068-0.156-0.154c0-0.694-0.563-1.257-1.257-1.257c-0.098,0-0.197,0.013-0.3,0.038C6.493,4.259,6.45,4.252,6.415,4.229C6.38,4.208,6.356,4.172,6.348,4.131C6.117,3.032,5.135,2.235,4.01,2.235c-1.252,0-2.297,0.979-2.379,2.23c-0.004,0.056-0.039,0.108-0.093,0.13C1.076,4.793,0.776,5.249,0.776,5.752c0,0.693,0.564,1.257,1.257,1.257h6.495c0.383,0,0.695-0.31,0.695-0.692S8.911,5.624,8.528,5.624z\"\n        ></path>\n      </svg>\n      <div className=\"rain\">\n        <span className=\"drop\"></span>\n        <span className=\"drop\"></span>\n        <span className=\"drop\"></span>\n        <span className=\"drop\"></span>\n        <span className=\"drop\"></span>\n        <span className=\"drop\"></span>\n        <span className=\"drop\"></span>\n        <span className=\"drop\"></span>\n        <span className=\"drop\"></span>\n        <span className=\"drop\"></span>\n      </div>\n\n      <div className=\"text\">LOOKING OUTSIDE FOR YOU... ONE SEC</div>\n    </div>\n  </>\n);\nexport default Loading;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useReducerAPI } from '../api'\n\nimport Card from '../components/card'\nimport Loading from '../components/loading'\n\nconst Home = () => {\n  const countryState = useReducerAPI('https://simplemaps.com/static/data/country-cities/mm/mm.json')\n\n  return (\n    <>\n      {countryState.loading && <Loading />}\n      {countryState.data &&\n        countryState.data.map((item) => (\n          <Link\n            data-testid=\"location\"\n            to={`${process.env.PUBLIC_URL}/detail/${item.lat}/${item.lng}`}\n            key={`${item.population}-${item.city}`}\n          >\n            <Card name={item.city} population={item.population} />\n          </Link>\n        ))}\n    </>\n  )\n}\n\nexport default Home\n","import moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport \"./index.css\";\n\nconst MiniCard = ({ datetime, iconcode, temperature }) => {\n  return (\n    <div className=\"minicard\">\n      <p className=\"date\">{moment.unix(datetime).format(\"ll\")}</p>\n      <div className=\"cloud-icon\">\n        <img\n          alt={iconcode}\n          src={`http://openweathermap.org/img/wn/${iconcode}@2x.png`}\n        />\n      </div>\n      <p className=\"temperature\">{temperature} &#176;</p>\n    </div>\n  );\n};\n\nexport default MiniCard;\n\nMiniCard.propTypes = {\n  datetime: PropTypes.number,\n  iconcode: PropTypes.string,\n  temperature: PropTypes.number,\n};\n","import PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport './index.css'\n\nconst Status = ({ icon, data, unit }) => (\n  <div data-testid=\"status\" className=\"flex px-6\">\n    <FontAwesomeIcon icon={icon} className=\"px-2\" style={{ color: '#374151' }} />\n    <p className=\"m-0 text-gray-800\">\n      {data}&nbsp;{unit}\n    </p>\n  </div>\n)\n\nexport default Status\n\nStatus.propTypes = {\n  icon: PropTypes.object,\n  data: PropTypes.number,\n  unit: PropTypes.string,\n}\n","import React from \"react\";\n\nexport const OWMapKeyAPIContext = React.createContext(\"\");\n","import React, { useContext } from 'react'\nimport { useParams } from 'react-router'\nimport { faWind } from '@fortawesome/free-solid-svg-icons'\nimport { faTint } from '@fortawesome/free-solid-svg-icons'\nimport { useReducerAPI } from '../api'\nimport MiniCard from '../components/minicard'\nimport Status from '../components/status'\nimport Loading from '../components/loading'\n\nimport { OWMapKeyAPIContext } from '../context'\nimport './index.css'\n\nconst Detail = function () {\n  let { lat, lng } = useParams()\n  const apikey = useContext(OWMapKeyAPIContext)\n  const currentWeatherState = useReducerAPI(\n    `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&units=metric&appid=${apikey}`,\n  )\n\n  if (currentWeatherState && currentWeatherState.data && currentWeatherState.data.current) {\n    const { daily } = currentWeatherState.data\n    const { temp, wind_speed, humidity } = currentWeatherState.data.current\n    const { icon, description } = currentWeatherState.data.current.weather[0]\n\n    return (\n      <div data-testid=\"detail-container\" className=\"container\">\n        <img src={`http://openweathermap.org/img/wn/${icon}@4x.png`} alt=\"status\" />\n        <p data-testid=\"detail-text\" className=\"capitalize font-medium tracking-wider\">{description}</p>\n        <p className=\"text-7xl my-8\">{temp}&#176;</p>\n        <div className=\"flex justify-center\">\n          <Status icon={faWind} data={wind_speed} unit=\"km/h\" />\n          <Status icon={faTint} data={humidity} unit=\"%\" />\n        </div>\n        <div className=\"flex mt-8 overflow-y-scroll\">\n          {daily.map(({ dt, weather, temp }, index) => (\n            <MiniCard datetime={dt} iconcode={weather[0].icon} temperature={temp.max} key={index} />\n          ))}\n        </div>\n      </div>\n    )\n  }\n  return <>{currentWeatherState.loading && <Loading />}</>\n}\n\nexport default Detail\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Home from \"./home\";\nimport Detail from \"./detail\";\n\nfunction App() {\n  return (\n    <div data-testid=\"app\" className=\"wrapper \">\n      <Router>\n        <Switch>\n          <Route exact path={`${process.env.PUBLIC_URL}/`}>\n            <Home />\n          </Route>\n          <Route exact path={`${process.env.PUBLIC_URL}/home`}>\n            <Home />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/detail/:lat/:lng`}>\n            <Detail />\n          </Route>\n          <Route path=\"*\">404</Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { OWMapKeyAPIContext } from \"./context\";\n\nconst WEATHER_KEY = atob(\n  process.env.REACT_APP_WEATHER_KEY ||\n    \"ZDc5ZTQ3M2MyN2UxY2U4NWExNDVjM2E1MWUyM2YyYzU=\"\n);\nReactDOM.render(\n  <React.StrictMode>\n    <OWMapKeyAPIContext.Provider value={WEATHER_KEY}>\n      <App />\n    </OWMapKeyAPIContext.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}